{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Red/Documents/GitHub/375-arcade-test/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\r\nimport { useAccount, useDisconnect, useSignMessage } from 'wagmi';\r\nimport BlurredPreview from '../components/BlurredPreview';\r\nimport CanvasTetris from '../components/CanvasTetris';\r\nimport CanvasPacman from '../components/CanvasPacman';\r\nimport NavigationHeader from '../components/layout/NavigationHeader';\r\nimport Footer from '../components/layout/Footer';\r\nimport LeaderboardPanel from '../components/ui/LeaderboardPanel';\r\nimport GameCarousel from '../components/ui/GameCarousel';\r\nimport AuthenticationModal from '../components/modals/AuthenticationModal';\r\nimport NetworkSwitchModal from '../components/modals/NetworkSwitchModal';\r\nimport MobileWarningModal from '../components/modals/MobileWarningModal';\r\nimport GameReadyScreen from '../components/ui/GameReadyScreen';\r\nimport { useLeaderboard } from '../hooks/useLeaderboard';\r\nimport { usePersistentState } from '../hooks/usePersistentState';\r\nimport { handlePayment, authenticateUser } from '../lib/walletUtils';\r\nimport { STORAGE_KEYS, IRYS_PARAMS } from '../constants';\r\nimport type { GameType } from '../types';\r\n\r\nexport default function Page() {\r\n  const { open } = useWeb3Modal();\r\n  const { address, isConnected, chainId } = useAccount();\r\n  const { disconnect } = useDisconnect();\r\n  const { signMessageAsync } = useSignMessage();\r\n  \r\n  const [mounted, setMounted] = useState(false);\r\n  const [authed, setAuthed] = usePersistentState(STORAGE_KEYS.IS_AUTHENTICATED, 'false', mounted);\r\n  const [isPaid, setIsPaid] = usePersistentState(STORAGE_KEYS.IS_PAID, 'false', mounted);\r\n  const [selectedGame, setSelectedGame] = usePersistentState<GameType>(STORAGE_KEYS.SELECTED_GAME, null, mounted);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\r\n\r\n  const { leaderboard, isLoadingLeaderboard, personalBests, refreshLeaderboard } = useLeaderboard(\r\n    mounted, address, isConnected, isOfflineMode\r\n  );\r\n\r\n  useEffect(() => { setMounted(true); }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mounted || !address || !isConnected) return;\r\n    try {\r\n      const savedAuth = localStorage.getItem(STORAGE_KEYS.IS_AUTHENTICATED) === 'true';\r\n      const savedPaid = localStorage.getItem(STORAGE_KEYS.IS_PAID) === 'true';\r\n      const savedGame = localStorage.getItem(STORAGE_KEYS.SELECTED_GAME) as GameType;\r\n      if (savedAuth) {\r\n        setAuthed('true');\r\n        setIsPaid(savedPaid ? 'true' : 'false');\r\n        if (savedGame) setSelectedGame(savedGame);\r\n      }\r\n    } catch (e) { console.error(e); }\r\n  }, [mounted, address, isConnected, setAuthed, setIsPaid, setSelectedGame]);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    try {\r\n      if (address) localStorage.setItem(STORAGE_KEYS.WALLET_ADDRESS, address);\r\n    } catch (e) { console.error(e); }\r\n  }, [mounted, address]);\r\n\r\n  const clearPersistedState = () => {\r\n    if (!mounted) return;\r\n    try { Object.values(STORAGE_KEYS).forEach(key => localStorage.removeItem(key)); }\r\n    catch (e) { console.error(e); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    if (!isConnected) {\r\n      setAuthed('false');\r\n      setIsPaid('false');\r\n      setSelectedGame(null);\r\n      setGameStarted(false);\r\n      setGameOver(false);\r\n      setIsOfflineMode(false);\r\n      clearPersistedState();\r\n    } else if (isConnected && address) {\r\n      try {\r\n        const savedAuth = localStorage.getItem(STORAGE_KEYS.IS_AUTHENTICATED) === 'true';\r\n        const savedPaid = localStorage.getItem(STORAGE_KEYS.IS_PAID) === 'true';\r\n        const savedGame = localStorage.getItem(STORAGE_KEYS.SELECTED_GAME) as GameType;\r\n        if (savedAuth) {\r\n          setAuthed('true');\r\n          setIsPaid(savedPaid ? 'true' : 'false');\r\n          if (savedGame) setSelectedGame(savedGame);\r\n        }\r\n      } catch (e) { console.error(e); }\r\n    }\r\n  }, [mounted, isConnected, address, setAuthed, setIsPaid, setSelectedGame]);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    const canStartGame = ((isPaid === 'true') || isOfflineMode) && selectedGame && !gameStarted && !gameOver;\r\n    if (!canStartGame) return;\r\n    const handler = (e: KeyboardEvent) => {\r\n      if (e.code === 'Space') {\r\n        setGameStarted(true);\r\n        setGameOver(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handler);\r\n    return () => window.removeEventListener('keydown', handler);\r\n  }, [mounted, isPaid, isOfflineMode, selectedGame, gameStarted, gameOver]);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    const link = document.createElement('link');\r\n    link.href = 'https://fonts.googleapis.com/css2?family=Oswald:wght@400;700;800&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n  }, [mounted]);\r\n\r\n  if (!mounted) return null;\r\n\r\n  const handleGamePayment = async (gameType: GameType) => {\r\n    if (!gameType) return;\r\n    setIsProcessingPayment(true);\r\n    try {\r\n      await handlePayment(gameType);\r\n      setSelectedGame(gameType);\r\n      setIsPaid('true');\r\n      setGameStarted(false);\r\n      setGameOver(false);\r\n    } catch (e: any) {\r\n      if (e.code === 4001) alert('Payment cancelled by user');\r\n      else if (e.message?.includes('insufficient funds')) alert('Insufficient funds. Please add more IRYS to your wallet.');\r\n      else alert('Payment failed: ' + e.message);\r\n    } finally {\r\n      setIsProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  const handleOfflineRestart = () => {\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const handlePublishScore = async () => {\r\n    await refreshLeaderboard();\r\n  };\r\n\r\n  const handleHomeClick = () => {\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n    setIsPaid('false');\r\n    setSelectedGame(null);\r\n    if (isOfflineMode) {\r\n      setAuthed('false');\r\n      setIsOfflineMode(false);\r\n    }\r\n    try {\r\n      localStorage.setItem(STORAGE_KEYS.IS_PAID, 'false');\r\n      localStorage.removeItem(STORAGE_KEYS.SELECTED_GAME);\r\n    } catch (e) { console.error(e); }\r\n  };\r\n\r\n  const handleDisconnectWallet = () => {\r\n    disconnect();\r\n    setAuthed('false');\r\n    setIsPaid('false');\r\n    setSelectedGame(null);\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n    setIsOfflineMode(false);\r\n    clearPersistedState();\r\n  };\r\n\r\n  const handleWalletConnection = async () => {\r\n    try { await open(); }\r\n    catch (e: any) {\r\n      console.error(e);\r\n      alert('Failed to open wallet connection modal: ' + e.message);\r\n    }\r\n  };\r\n\r\n  const handleAuthentication = async () => {\r\n    try {\r\n      await authenticateUser(signMessageAsync);\r\n      setAuthed('true');\r\n      setIsPaid('false');\r\n      setSelectedGame(null);\r\n      setGameStarted(false);\r\n      setGameOver(false);\r\n    } catch (e: any) {\r\n      if (e.message.includes('User rejected')) alert('Authentication cancelled by user');\r\n      else alert('Authentication failed: ' + e.message);\r\n    }\r\n  };\r\n\r\n  const handleOfflinePlay = (gameType: GameType) => {\r\n    setIsOfflineMode(true);\r\n    setAuthed('true');\r\n    setSelectedGame(gameType);\r\n    setIsPaid('true');\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const containerStyle = {\r\n    minHeight: '100vh',\r\n    maxHeight: '100vh',\r\n    background: 'linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #2a2a2a 100%)',\r\n    color: 'white',\r\n    fontFamily: '\"Inter\", -apple-system, BlinkMacSystemFont, sans-serif',\r\n    overflow: 'hidden'\r\n  } as const;\r\n\r\n  const mobileStyles = `\r\n    @media (max-width: 480px) {\r\n      .mobile-message {\r\n        display: flex !important;\r\n      }\r\n      .desktop-content {\r\n        display: none !important;\r\n      }\r\n    }\r\n    @media (min-width: 481px) and (max-width: 768px) {\r\n      .tablet-adjustments {\r\n        transform: scale(0.5) !important;\r\n      }\r\n      .carousel-game-center, .carousel-game-side {\r\n        min-width: 200px !important;\r\n        max-width: 220px !important;\r\n        height: 180px !important;\r\n      }\r\n      .arcade-title-fixed {\r\n        max-width: 200px !important;\r\n      }\r\n    }\r\n    @media (max-width: 1440px) {\r\n      .arcade-container {\r\n        padding: 120px 15px 120px !important;\r\n      }\r\n      .arcade-title-fixed {\r\n        max-width: 400px !important;\r\n        margin-bottom: 50px !important;\r\n      }\r\n    }\r\n    @media (max-width: 768px) {\r\n      .arcade-container {\r\n        padding: 100px 10px 100px !important;\r\n      }\r\n      .arcade-title-fixed {\r\n        max-width: 280px !important;\r\n        margin-bottom: 30px !important;\r\n      }\r\n      .carousel-container {\r\n        flex-direction: column !important;\r\n        gap: 20px !important;\r\n      }\r\n      .carousel-game-center, .carousel-game-side {\r\n        min-width: 250px !important;\r\n        max-width: 280px !important;\r\n        height: 350px !important;\r\n      }\r\n    }\r\n  `;\r\n\r\n  const isAuthenticated = authed === 'true';\r\n  const hasPaid = isPaid === 'true';\r\n\r\n  // Wrong network check\r\n  if (chainId && chainId !== 1270 && !isOfflineMode) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        <NetworkSwitchModal />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No wallet connected\r\n  if (!address && !isConnected && !isOfflineMode) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <style>{mobileStyles}</style>\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        \r\n        {/* Mobile Message */}\r\n        <div className=\"mobile-message\" style={{ display: 'none' }}>\r\n          <MobileWarningModal leaderboard={leaderboard} />\r\n          <Footer />\r\n        </div>\r\n\r\n        {/* Desktop Content */}\r\n        <div className=\"desktop-content arcade-container\" style={{ padding: '130px 20px 120px', display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh', position: 'relative' }}>\r\n          <div style={{ width: '100%', maxWidth: '1200px', textAlign: 'center', marginTop: '-20px' }}>\r\n            <div style={{ marginBottom: '40px', position: 'relative', zIndex: 10 }}>\r\n              <img\r\n                src=\"/arcade-title.png\"\r\n                alt=\"375 Arcade - Built on Irys\"\r\n                className=\"arcade-title-fixed\"\r\n                style={{\r\n                  maxWidth: '400px',\r\n                  width: '100%',\r\n                  height: 'auto',\r\n                  filter: 'drop-shadow(0 8px 16px rgba(255, 61, 20, 0.3))'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <GameCarousel \r\n              onGameSelect={handleGamePayment}\r\n              onWalletConnection={handleWalletConnection}\r\n              onOfflinePlay={handleOfflinePlay}\r\n              isProcessingPayment={isProcessingPayment}\r\n              showPaymentButtons={false}\r\n            />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Authentication required\r\n  if (!isAuthenticated && address && isConnected) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        <AuthenticationModal \r\n          address={address}\r\n          onAuthenticate={handleAuthentication}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Game selection (authenticated, not paid)\r\n  if (address && isConnected && isAuthenticated && !hasPaid && !gameStarted && !gameOver) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        <div style={{ padding: '70px 20px 80px', display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh', position: 'relative' }}>\r\n          <div style={{ width: '100%', maxWidth: '1200px', textAlign: 'center' }}>\r\n            <div style={{ marginBottom: '30px', position: 'relative', zIndex: 10 }}>\r\n              <img\r\n                src=\"/arcade-title.png\"\r\n                alt=\"375 Arcade - Built on Irys\"\r\n                style={{\r\n                  maxWidth: '400px',\r\n                  width: '100%',\r\n                  height: 'auto',\r\n                  filter: 'drop-shadow(0 8px 16px rgba(255, 61, 20, 0.3))'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <GameCarousel \r\n              onGameSelect={handleGamePayment}\r\n              onWalletConnection={handleWalletConnection}\r\n              onOfflinePlay={handleOfflinePlay}\r\n              isProcessingPayment={isProcessingPayment}\r\n              showPaymentButtons={true}\r\n            />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Game ready screen\r\n  if ((isOfflineMode || hasPaid) && selectedGame && !gameStarted && !gameOver) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '140px',\r\n          left: '20px',\r\n          zIndex: 1000\r\n        }}>\r\n          <img\r\n            src=\"/arcade-title.png\"\r\n            alt=\"375 Arcade - Built on Irys\"\r\n            style={{\r\n              maxWidth: '500px',\r\n              width: '100%',\r\n              height: 'auto',\r\n              filter: 'drop-shadow(0 4px 8px rgba(255, 61, 20, 0.3))'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        <GameReadyScreen \r\n          selectedGame={selectedGame}\r\n          address={address}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Game playing\r\n  if (gameStarted || gameOver) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '140px',\r\n          left: '20px',\r\n          zIndex: 1000\r\n        }}>\r\n          <img\r\n            src=\"/arcade-title.png\"\r\n            alt=\"375 Arcade - Built on Irys\"\r\n            style={{\r\n              maxWidth: '500px',\r\n              width: '100%',\r\n              height: 'auto',\r\n              filter: 'drop-shadow(0 4px 8px rgba(255, 61, 20, 0.3))'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <NavigationHeader \r\n          onHomeClick={handleHomeClick}\r\n          onDisconnectWallet={handleDisconnectWallet}\r\n          address={address}\r\n          isConnected={isConnected}\r\n          authed={isAuthenticated}\r\n          isOfflineMode={isOfflineMode}\r\n        />\r\n        <LeaderboardPanel \r\n          isPaid={hasPaid}\r\n          isOfflineMode={isOfflineMode}\r\n          selectedGame={selectedGame}\r\n          leaderboard={leaderboard}\r\n          isLoadingLeaderboard={isLoadingLeaderboard}\r\n          personalBests={personalBests}\r\n          address={address}\r\n        />\r\n        <div style={{\r\n          padding: '80px 20px 20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          minHeight: '100vh'\r\n        }}>\r\n          {selectedGame === 'tetris' ? (\r\n            <CanvasTetris\r\n              start={gameStarted}\r\n              onGameOver={(score, lines) => {\r\n                setGameOver(true);\r\n                setGameStarted(false);\r\n              }}\r\n              onPlayAgain={isOfflineMode ? handleOfflineRestart : () => handleGamePayment('tetris')}\r\n              onPublishScore={handlePublishScore}\r\n              playerAddress={isOfflineMode ? undefined : address}\r\n            />\r\n          ) : selectedGame === 'pacman' ? (\r\n            <CanvasPacman\r\n              start={gameStarted}\r\n              onGameOver={(score, level) => {\r\n                setGameOver(true);\r\n                setGameStarted(false);\r\n              }}\r\n              onPlayAgain={isOfflineMode ? handleOfflineRestart : () => handleGamePayment('pacman')}\r\n              onPublishScore={handlePublishScore}\r\n              playerAddress={isOfflineMode ? undefined : address}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Loading state\r\n  return (\r\n    <div style={containerStyle}>\r\n      <NavigationHeader \r\n        onHomeClick={handleHomeClick}\r\n        onDisconnectWallet={handleDisconnectWallet}\r\n        address={address}\r\n        isConnected={isConnected}\r\n        authed={isAuthenticated}\r\n        isOfflineMode={isOfflineMode}\r\n      />\r\n      <LeaderboardPanel \r\n        isPaid={hasPaid}\r\n        isOfflineMode={isOfflineMode}\r\n        selectedGame={selectedGame}\r\n        leaderboard={leaderboard}\r\n        isLoadingLeaderboard={isLoadingLeaderboard}\r\n        personalBests={personalBests}\r\n        address={address}\r\n      />\r\n      <div style={{ padding: '100px 20px 40px', display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '100vh' }}>\r\n        <div style={{\r\n          background: 'linear-gradient(135deg, rgba(8, 8, 12, 0.9) 0%, rgba(25, 25, 35, 0.9) 100%)',\r\n          border: '2px solid rgba(80, 255, 214, 0.3)',\r\n          borderRadius: '20px',\r\n          padding: '40px',\r\n          backdropFilter: 'blur(12px)',\r\n          boxShadow: '0 25px 50px -12px rgba(80, 255, 214, 0.2)',\r\n          textAlign: 'center' as const,\r\n          transition: 'all 0.3s ease'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>🔄</div>\r\n          <h2 style={{ marginBottom: '20px' }}>Loading...</h2>\r\n          <p style={{ color: '#B9C1C1' }}>Initializing 375 Arcade...</p>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}